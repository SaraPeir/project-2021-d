{"version":3,"sources":["webpack://project-2021-c/./src/client/App.js","webpack://project-2021-c/./src/client/Global.js","webpack://project-2021-c/./src/client/asyncComponents/Countdown/AsyncCountdown.js","webpack://project-2021-c/./src/client/asyncComponents/Countdown/index.js","webpack://project-2021-c/./src/client/components/Tasks/index.js","webpack://project-2021-c/./src/client/index.js","webpack://project-2021-c/./src/redux/slices/countdownShower.js","webpack://project-2021-c/./src/redux/slices/counter.js","webpack://project-2021-c/./src/redux/slices/weatherShower.js","webpack://project-2021-c/./src/redux/store.js"],"names":["App","props","store","provinces","Global","isCountdownDisplayed","useSelector","state","console","log","countdownShower","value","countdown","dispatch","useDispatch","showCountdown","loadable","ssr","Countdown","client","ApolloClient","uri","cache","InMemoryCache","query","gql","then","result","loadableReady","hydrate","window","__PROVINCES__","document","getElementById","countdownShowerSlice","createSlice","name","initialState","reducers","actions","reducer","counterSlice","increment","decrement","incrementByAmount","action","payload","weatherShowerSlice","showWeather","configureStore","counter","counterReducer","countdownShowerReducer","weatherShower","weatherShowerReducer"],"mappings":"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","file":"main.a5d0ffaf807710c0a0a4.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport { Provider } from 'react-redux'\r\nimport store from '../redux/store'\r\nimport Global from \"./Global\"\r\n\r\nconst App = (props) => {\r\n    return(\r\n        <Provider store={store}>\r\n            <Global provinces={props.provinces} />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport Tasks from './components/Tasks'\r\nimport Countdown from './asyncComponents/Countdown'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showCountdown } from '../redux/slices/countdownShower'\r\n\r\nconst Global = (props) => {\r\n    const isCountdownDisplayed = useSelector((state) => {\r\n        console.log('state', state)\r\n        return state.countdownShower.value\r\n    })\r\n\r\n    const countdown = () => {\r\n        if(isCountdownDisplayed) {\r\n            return <Countdown />\r\n        }\r\n        return;\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <button onClick={() => dispatch(showCountdown())}>See how miss to 2022</button>\r\n            <Tasks />\r\n            {countdown()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Global;","import loadable from \"@loadable/component\";\r\n\r\n// Countdown component is loaded by webpack only if user can see it. \r\n// It's not included in main bundle any more\r\n\r\nexport default loadable(() =>\r\n  // When import() is used Webpack creates a new chunk for the imported code, splitting it from the main bundle.\r\n  // (https://medium.com/swlh/an-introduction-to-webpack-code-splitting-loadable-component-and-resource-hints-f0c3a3e45ce4)\r\n  import(/* webpackChunkName: \"async_countdown\" */ \"./Countdown\"),\r\n  {ssr: true}\r\n);","import Countdown from './AsyncCountdown';\r\n\r\nexport default Countdown;","import loadable from \"@loadable/component\";\r\n\r\nexport default loadable(() =>\r\n  import(/* webpackChunkName: \"tasks\" */ \"./Tasks\"),\r\n  {ssr: false}\r\n);","import React from 'react';\r\nimport { hydrate } from 'react-dom';\r\nimport App from './App';\r\nimport { loadableReady } from '@loadable/component';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  gql\r\n} from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:4000/graphql',\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nconsole.log('client', client)\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      query getTasks {\r\n          tasks {\r\n            _id\r\n            isDone\r\n            task\r\n          }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));\r\n\r\nexport default loadableReady(() => {\r\n    hydrate(\r\n      <ApolloProvider client={client}>\r\n        <App provinces={window.__PROVINCES__} />\r\n      </ApolloProvider>,\r\n      document.getElementById('app'),\r\n    );\r\n});\r\n\r\n \r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const countdownShowerSlice = createSlice({\r\n  name: 'countdownShower',\r\n  initialState: {\r\n    value: true,\r\n  },\r\n  reducers: {\r\n    showCountdown: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* console.log('state.value', state.value)\r\n      return !state.value || !state */\r\n\r\n      return {\r\n        ...state,\r\n        value: !state.value\r\n      }\r\n      \r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { showCountdown } = countdownShowerSlice.actions\r\n\r\nexport default countdownShowerSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const weatherShowerSlice = createSlice({\r\n  name: 'weatherShower',\r\n  initialState: {\r\n    value: true,\r\n  },\r\n  reducers: {\r\n    showWeather: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      /* console.log('state.value', state.value)\r\n      return !state.value || !state */\r\n\r\n      return {\r\n        ...state,\r\n        value: !state.value\r\n      }\r\n      \r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { showWeather } = weatherShowerSlice.actions\r\n\r\nexport default weatherShowerSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\r\nimport counterReducer from './slices/counter'\r\nimport countdownShowerReducer from './slices/countdownShower'\r\nimport weatherShowerReducer from './slices/weatherShower'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n      counter: counterReducer,\r\n      countdownShower: countdownShowerReducer,\r\n      weatherShower: weatherShowerReducer\r\n  },\r\n})"],"sourceRoot":""}